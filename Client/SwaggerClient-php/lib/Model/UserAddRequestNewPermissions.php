<?php
/**
 * UserAddRequestNewPermissions
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * BioTrack API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.11
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * UserAddRequestNewPermissions Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UserAddRequestNewPermissions implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'User_AddRequest_new_permissions';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'inventory_convert' => 'string',
'sale_dispense' => 'string',
'sale_modify' => 'string',
'sale_void' => 'string',
'sale_refund' => 'string',
'justauthenticate' => 'string',
'employee_add' => 'string',
'employee_modify' => 'string',
'employee_remove' => 'string',
'vehicle_add' => 'string',
'vehicle_modify' => 'string',
'vehicle_remove' => 'string',
'plant_room_add' => 'string',
'plant_room_modify' => 'string',
'plant_room_remove' => 'string',
'inventory_room_add' => 'string',
'inventory_room_modify' => 'string',
'inventory_room_remove' => 'string',
'plant_destroy_schedule' => 'string',
'plant_destroy_schedule_undo' => 'string',
'plant_destroy' => 'string',
'plant_harvest_schedule' => 'string',
'plant_harvest_schedule_undo' => 'string',
'plant_harvest' => 'string',
'plant_new' => 'string',
'plant_new_undo' => 'string',
'plant_convert_to_inventory' => 'string',
'plant_cure' => 'string',
'plant_yield_modify' => 'string',
'plant_waste_weigh' => 'string',
'inventory_new' => 'string',
'inventory_manifest_lookup' => 'string',
'inventory_transfer_inbound' => 'string',
'inventory_transfer_inbound_modify' => 'string',
'inventory_transfer_lookup' => 'string',
'inventory_transfer_outbound' => 'string',
'inventory_transfer_outbound_modify' => 'string',
'inventory_transfer_outbound_void' => 'string',
'plant_move' => 'string',
'plant_modify' => 'string',
'inventory_adjust' => 'string',
'inventory_adjust_usable' => 'string',
'inventory_sample' => 'string',
'inventory_qa_check' => 'string',
'inventory_qa_check_all' => 'string',
'inventory_qa_sample' => 'string',
'inventory_qa_sample_void' => 'string',
'inventory_qa_sample_results' => 'string',
'inventory_manifest_pickup' => 'string',
'inventory_manifest_modify' => 'string',
'inventory_manifest' => 'string',
'inventory_manifest_void' => 'string',
'inventory_manifest_void_stop' => 'string',
'inventory_manifest_void_items' => 'string',
'inventory_create_lot' => 'string',
'inventory_split' => 'string',
'user_add' => 'string',
'user_modify' => 'string',
'user_remove' => 'string',
'inventory_move' => 'string',
'inventory_destroy_schedule' => 'string',
'inventory_destroy_schedule_undo' => 'string',
'inventory_destroy' => 'string',
'tax_obligation_file' => 'string',
'nonce_replay' => 'string',
'sync_vehicle' => 'string',
'sync_employee' => 'string',
'sync_plant_room' => 'string',
'sync_inventory_room' => 'string',
'sync_inventory' => 'string',
'sync_plant' => 'string',
'sync_plant_derivative' => 'string',
'sync_manifest' => 'string',
'sync_inventory_transfer' => 'string',
'sync_inventory_transfer_inbound' => 'string',
'sync_sale' => 'string',
'sync_tax_report' => 'string',
'sync_vendor' => 'string',
'sync_qa_lab' => 'string',
'sync_check' => 'string',
'sync_inventory_adjust' => 'string',
'sync_inventory_qa_sample' => 'string',
'sync_inventory_sample' => 'string',
'inventory_transfer_outbound_return_lookup' => 'string',
'inventory_transfer_outbound_return' => 'string',
'inventory_convert_undo' => 'string',
'card_lookup' => 'string'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'inventory_convert' => null,
'sale_dispense' => null,
'sale_modify' => null,
'sale_void' => null,
'sale_refund' => null,
'justauthenticate' => null,
'employee_add' => null,
'employee_modify' => null,
'employee_remove' => null,
'vehicle_add' => null,
'vehicle_modify' => null,
'vehicle_remove' => null,
'plant_room_add' => null,
'plant_room_modify' => null,
'plant_room_remove' => null,
'inventory_room_add' => null,
'inventory_room_modify' => null,
'inventory_room_remove' => null,
'plant_destroy_schedule' => null,
'plant_destroy_schedule_undo' => null,
'plant_destroy' => null,
'plant_harvest_schedule' => null,
'plant_harvest_schedule_undo' => null,
'plant_harvest' => null,
'plant_new' => null,
'plant_new_undo' => null,
'plant_convert_to_inventory' => null,
'plant_cure' => null,
'plant_yield_modify' => null,
'plant_waste_weigh' => null,
'inventory_new' => null,
'inventory_manifest_lookup' => null,
'inventory_transfer_inbound' => null,
'inventory_transfer_inbound_modify' => null,
'inventory_transfer_lookup' => null,
'inventory_transfer_outbound' => null,
'inventory_transfer_outbound_modify' => null,
'inventory_transfer_outbound_void' => null,
'plant_move' => null,
'plant_modify' => null,
'inventory_adjust' => null,
'inventory_adjust_usable' => null,
'inventory_sample' => null,
'inventory_qa_check' => null,
'inventory_qa_check_all' => null,
'inventory_qa_sample' => null,
'inventory_qa_sample_void' => null,
'inventory_qa_sample_results' => null,
'inventory_manifest_pickup' => null,
'inventory_manifest_modify' => null,
'inventory_manifest' => null,
'inventory_manifest_void' => null,
'inventory_manifest_void_stop' => null,
'inventory_manifest_void_items' => null,
'inventory_create_lot' => null,
'inventory_split' => null,
'user_add' => null,
'user_modify' => null,
'user_remove' => null,
'inventory_move' => null,
'inventory_destroy_schedule' => null,
'inventory_destroy_schedule_undo' => null,
'inventory_destroy' => null,
'tax_obligation_file' => null,
'nonce_replay' => null,
'sync_vehicle' => null,
'sync_employee' => null,
'sync_plant_room' => null,
'sync_inventory_room' => null,
'sync_inventory' => null,
'sync_plant' => null,
'sync_plant_derivative' => null,
'sync_manifest' => null,
'sync_inventory_transfer' => null,
'sync_inventory_transfer_inbound' => null,
'sync_sale' => null,
'sync_tax_report' => null,
'sync_vendor' => null,
'sync_qa_lab' => null,
'sync_check' => null,
'sync_inventory_adjust' => null,
'sync_inventory_qa_sample' => null,
'sync_inventory_sample' => null,
'inventory_transfer_outbound_return_lookup' => null,
'inventory_transfer_outbound_return' => null,
'inventory_convert_undo' => null,
'card_lookup' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'inventory_convert' => 'inventory_convert',
'sale_dispense' => 'sale_dispense',
'sale_modify' => 'sale_modify',
'sale_void' => 'sale_void',
'sale_refund' => 'sale_refund',
'justauthenticate' => 'justauthenticate',
'employee_add' => 'employee_add',
'employee_modify' => 'employee_modify',
'employee_remove' => 'employee_remove',
'vehicle_add' => 'vehicle_add',
'vehicle_modify' => 'vehicle_modify',
'vehicle_remove' => 'vehicle_remove',
'plant_room_add' => 'plant_room_add',
'plant_room_modify' => 'plant_room_modify',
'plant_room_remove' => 'plant_room_remove',
'inventory_room_add' => 'inventory_room_add',
'inventory_room_modify' => 'inventory_room_modify',
'inventory_room_remove' => 'inventory_room_remove',
'plant_destroy_schedule' => 'plant_destroy_schedule',
'plant_destroy_schedule_undo' => 'plant_destroy_schedule_undo',
'plant_destroy' => 'plant_destroy',
'plant_harvest_schedule' => 'plant_harvest_schedule',
'plant_harvest_schedule_undo' => 'plant_harvest_schedule_undo',
'plant_harvest' => 'plant_harvest',
'plant_new' => 'plant_new',
'plant_new_undo' => 'plant_new_undo',
'plant_convert_to_inventory' => 'plant_convert_to_inventory',
'plant_cure' => 'plant_cure',
'plant_yield_modify' => 'plant_yield_modify',
'plant_waste_weigh' => 'plant_waste_weigh',
'inventory_new' => 'inventory_new',
'inventory_manifest_lookup' => 'inventory_manifest_lookup',
'inventory_transfer_inbound' => 'inventory_transfer_inbound',
'inventory_transfer_inbound_modify' => 'inventory_transfer_inbound_modify',
'inventory_transfer_lookup' => 'inventory_transfer_lookup',
'inventory_transfer_outbound' => 'inventory_transfer_outbound',
'inventory_transfer_outbound_modify' => 'inventory_transfer_outbound_modify',
'inventory_transfer_outbound_void' => 'inventory_transfer_outbound_void',
'plant_move' => 'plant_move',
'plant_modify' => 'plant_modify',
'inventory_adjust' => 'inventory_adjust',
'inventory_adjust_usable' => 'inventory_adjust_usable',
'inventory_sample' => 'inventory_sample',
'inventory_qa_check' => 'inventory_qa_check',
'inventory_qa_check_all' => 'inventory_qa_check_all',
'inventory_qa_sample' => 'inventory_qa_sample',
'inventory_qa_sample_void' => 'inventory_qa_sample_void',
'inventory_qa_sample_results' => 'inventory_qa_sample_results',
'inventory_manifest_pickup' => 'inventory_manifest_pickup',
'inventory_manifest_modify' => 'inventory_manifest_modify',
'inventory_manifest' => 'inventory_manifest',
'inventory_manifest_void' => 'inventory_manifest_void',
'inventory_manifest_void_stop' => 'inventory_manifest_void_stop',
'inventory_manifest_void_items' => 'inventory_manifest_void_items',
'inventory_create_lot' => 'inventory_create_lot',
'inventory_split' => 'inventory_split',
'user_add' => 'user_add',
'user_modify' => 'user_modify',
'user_remove' => 'user_remove',
'inventory_move' => 'inventory_move',
'inventory_destroy_schedule' => 'inventory_destroy_schedule',
'inventory_destroy_schedule_undo' => 'inventory_destroy_schedule_undo',
'inventory_destroy' => 'inventory_destroy',
'tax_obligation_file' => 'tax_obligation_file',
'nonce_replay' => 'nonce_replay',
'sync_vehicle' => 'sync_vehicle',
'sync_employee' => 'sync_employee',
'sync_plant_room' => 'sync_plant_room',
'sync_inventory_room' => 'sync_inventory_room',
'sync_inventory' => 'sync_inventory',
'sync_plant' => 'sync_plant',
'sync_plant_derivative' => 'sync_plant_derivative',
'sync_manifest' => 'sync_manifest',
'sync_inventory_transfer' => 'sync_inventory_transfer',
'sync_inventory_transfer_inbound' => 'sync_inventory_transfer_inbound',
'sync_sale' => 'sync_sale',
'sync_tax_report' => 'sync_tax_report',
'sync_vendor' => 'sync_vendor',
'sync_qa_lab' => 'sync_qa_lab',
'sync_check' => 'sync_check',
'sync_inventory_adjust' => 'sync_inventory_adjust',
'sync_inventory_qa_sample' => 'sync_inventory_qa_sample',
'sync_inventory_sample' => 'sync_inventory_sample',
'inventory_transfer_outbound_return_lookup' => 'inventory_transfer_outbound_return_lookup',
'inventory_transfer_outbound_return' => 'inventory_transfer_outbound_return',
'inventory_convert_undo' => 'inventory_convert_undo',
'card_lookup' => 'card_lookup'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'inventory_convert' => 'setInventoryConvert',
'sale_dispense' => 'setSaleDispense',
'sale_modify' => 'setSaleModify',
'sale_void' => 'setSaleVoid',
'sale_refund' => 'setSaleRefund',
'justauthenticate' => 'setJustauthenticate',
'employee_add' => 'setEmployeeAdd',
'employee_modify' => 'setEmployeeModify',
'employee_remove' => 'setEmployeeRemove',
'vehicle_add' => 'setVehicleAdd',
'vehicle_modify' => 'setVehicleModify',
'vehicle_remove' => 'setVehicleRemove',
'plant_room_add' => 'setPlantRoomAdd',
'plant_room_modify' => 'setPlantRoomModify',
'plant_room_remove' => 'setPlantRoomRemove',
'inventory_room_add' => 'setInventoryRoomAdd',
'inventory_room_modify' => 'setInventoryRoomModify',
'inventory_room_remove' => 'setInventoryRoomRemove',
'plant_destroy_schedule' => 'setPlantDestroySchedule',
'plant_destroy_schedule_undo' => 'setPlantDestroyScheduleUndo',
'plant_destroy' => 'setPlantDestroy',
'plant_harvest_schedule' => 'setPlantHarvestSchedule',
'plant_harvest_schedule_undo' => 'setPlantHarvestScheduleUndo',
'plant_harvest' => 'setPlantHarvest',
'plant_new' => 'setPlantNew',
'plant_new_undo' => 'setPlantNewUndo',
'plant_convert_to_inventory' => 'setPlantConvertToInventory',
'plant_cure' => 'setPlantCure',
'plant_yield_modify' => 'setPlantYieldModify',
'plant_waste_weigh' => 'setPlantWasteWeigh',
'inventory_new' => 'setInventoryNew',
'inventory_manifest_lookup' => 'setInventoryManifestLookup',
'inventory_transfer_inbound' => 'setInventoryTransferInbound',
'inventory_transfer_inbound_modify' => 'setInventoryTransferInboundModify',
'inventory_transfer_lookup' => 'setInventoryTransferLookup',
'inventory_transfer_outbound' => 'setInventoryTransferOutbound',
'inventory_transfer_outbound_modify' => 'setInventoryTransferOutboundModify',
'inventory_transfer_outbound_void' => 'setInventoryTransferOutboundVoid',
'plant_move' => 'setPlantMove',
'plant_modify' => 'setPlantModify',
'inventory_adjust' => 'setInventoryAdjust',
'inventory_adjust_usable' => 'setInventoryAdjustUsable',
'inventory_sample' => 'setInventorySample',
'inventory_qa_check' => 'setInventoryQaCheck',
'inventory_qa_check_all' => 'setInventoryQaCheckAll',
'inventory_qa_sample' => 'setInventoryQaSample',
'inventory_qa_sample_void' => 'setInventoryQaSampleVoid',
'inventory_qa_sample_results' => 'setInventoryQaSampleResults',
'inventory_manifest_pickup' => 'setInventoryManifestPickup',
'inventory_manifest_modify' => 'setInventoryManifestModify',
'inventory_manifest' => 'setInventoryManifest',
'inventory_manifest_void' => 'setInventoryManifestVoid',
'inventory_manifest_void_stop' => 'setInventoryManifestVoidStop',
'inventory_manifest_void_items' => 'setInventoryManifestVoidItems',
'inventory_create_lot' => 'setInventoryCreateLot',
'inventory_split' => 'setInventorySplit',
'user_add' => 'setUserAdd',
'user_modify' => 'setUserModify',
'user_remove' => 'setUserRemove',
'inventory_move' => 'setInventoryMove',
'inventory_destroy_schedule' => 'setInventoryDestroySchedule',
'inventory_destroy_schedule_undo' => 'setInventoryDestroyScheduleUndo',
'inventory_destroy' => 'setInventoryDestroy',
'tax_obligation_file' => 'setTaxObligationFile',
'nonce_replay' => 'setNonceReplay',
'sync_vehicle' => 'setSyncVehicle',
'sync_employee' => 'setSyncEmployee',
'sync_plant_room' => 'setSyncPlantRoom',
'sync_inventory_room' => 'setSyncInventoryRoom',
'sync_inventory' => 'setSyncInventory',
'sync_plant' => 'setSyncPlant',
'sync_plant_derivative' => 'setSyncPlantDerivative',
'sync_manifest' => 'setSyncManifest',
'sync_inventory_transfer' => 'setSyncInventoryTransfer',
'sync_inventory_transfer_inbound' => 'setSyncInventoryTransferInbound',
'sync_sale' => 'setSyncSale',
'sync_tax_report' => 'setSyncTaxReport',
'sync_vendor' => 'setSyncVendor',
'sync_qa_lab' => 'setSyncQaLab',
'sync_check' => 'setSyncCheck',
'sync_inventory_adjust' => 'setSyncInventoryAdjust',
'sync_inventory_qa_sample' => 'setSyncInventoryQaSample',
'sync_inventory_sample' => 'setSyncInventorySample',
'inventory_transfer_outbound_return_lookup' => 'setInventoryTransferOutboundReturnLookup',
'inventory_transfer_outbound_return' => 'setInventoryTransferOutboundReturn',
'inventory_convert_undo' => 'setInventoryConvertUndo',
'card_lookup' => 'setCardLookup'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'inventory_convert' => 'getInventoryConvert',
'sale_dispense' => 'getSaleDispense',
'sale_modify' => 'getSaleModify',
'sale_void' => 'getSaleVoid',
'sale_refund' => 'getSaleRefund',
'justauthenticate' => 'getJustauthenticate',
'employee_add' => 'getEmployeeAdd',
'employee_modify' => 'getEmployeeModify',
'employee_remove' => 'getEmployeeRemove',
'vehicle_add' => 'getVehicleAdd',
'vehicle_modify' => 'getVehicleModify',
'vehicle_remove' => 'getVehicleRemove',
'plant_room_add' => 'getPlantRoomAdd',
'plant_room_modify' => 'getPlantRoomModify',
'plant_room_remove' => 'getPlantRoomRemove',
'inventory_room_add' => 'getInventoryRoomAdd',
'inventory_room_modify' => 'getInventoryRoomModify',
'inventory_room_remove' => 'getInventoryRoomRemove',
'plant_destroy_schedule' => 'getPlantDestroySchedule',
'plant_destroy_schedule_undo' => 'getPlantDestroyScheduleUndo',
'plant_destroy' => 'getPlantDestroy',
'plant_harvest_schedule' => 'getPlantHarvestSchedule',
'plant_harvest_schedule_undo' => 'getPlantHarvestScheduleUndo',
'plant_harvest' => 'getPlantHarvest',
'plant_new' => 'getPlantNew',
'plant_new_undo' => 'getPlantNewUndo',
'plant_convert_to_inventory' => 'getPlantConvertToInventory',
'plant_cure' => 'getPlantCure',
'plant_yield_modify' => 'getPlantYieldModify',
'plant_waste_weigh' => 'getPlantWasteWeigh',
'inventory_new' => 'getInventoryNew',
'inventory_manifest_lookup' => 'getInventoryManifestLookup',
'inventory_transfer_inbound' => 'getInventoryTransferInbound',
'inventory_transfer_inbound_modify' => 'getInventoryTransferInboundModify',
'inventory_transfer_lookup' => 'getInventoryTransferLookup',
'inventory_transfer_outbound' => 'getInventoryTransferOutbound',
'inventory_transfer_outbound_modify' => 'getInventoryTransferOutboundModify',
'inventory_transfer_outbound_void' => 'getInventoryTransferOutboundVoid',
'plant_move' => 'getPlantMove',
'plant_modify' => 'getPlantModify',
'inventory_adjust' => 'getInventoryAdjust',
'inventory_adjust_usable' => 'getInventoryAdjustUsable',
'inventory_sample' => 'getInventorySample',
'inventory_qa_check' => 'getInventoryQaCheck',
'inventory_qa_check_all' => 'getInventoryQaCheckAll',
'inventory_qa_sample' => 'getInventoryQaSample',
'inventory_qa_sample_void' => 'getInventoryQaSampleVoid',
'inventory_qa_sample_results' => 'getInventoryQaSampleResults',
'inventory_manifest_pickup' => 'getInventoryManifestPickup',
'inventory_manifest_modify' => 'getInventoryManifestModify',
'inventory_manifest' => 'getInventoryManifest',
'inventory_manifest_void' => 'getInventoryManifestVoid',
'inventory_manifest_void_stop' => 'getInventoryManifestVoidStop',
'inventory_manifest_void_items' => 'getInventoryManifestVoidItems',
'inventory_create_lot' => 'getInventoryCreateLot',
'inventory_split' => 'getInventorySplit',
'user_add' => 'getUserAdd',
'user_modify' => 'getUserModify',
'user_remove' => 'getUserRemove',
'inventory_move' => 'getInventoryMove',
'inventory_destroy_schedule' => 'getInventoryDestroySchedule',
'inventory_destroy_schedule_undo' => 'getInventoryDestroyScheduleUndo',
'inventory_destroy' => 'getInventoryDestroy',
'tax_obligation_file' => 'getTaxObligationFile',
'nonce_replay' => 'getNonceReplay',
'sync_vehicle' => 'getSyncVehicle',
'sync_employee' => 'getSyncEmployee',
'sync_plant_room' => 'getSyncPlantRoom',
'sync_inventory_room' => 'getSyncInventoryRoom',
'sync_inventory' => 'getSyncInventory',
'sync_plant' => 'getSyncPlant',
'sync_plant_derivative' => 'getSyncPlantDerivative',
'sync_manifest' => 'getSyncManifest',
'sync_inventory_transfer' => 'getSyncInventoryTransfer',
'sync_inventory_transfer_inbound' => 'getSyncInventoryTransferInbound',
'sync_sale' => 'getSyncSale',
'sync_tax_report' => 'getSyncTaxReport',
'sync_vendor' => 'getSyncVendor',
'sync_qa_lab' => 'getSyncQaLab',
'sync_check' => 'getSyncCheck',
'sync_inventory_adjust' => 'getSyncInventoryAdjust',
'sync_inventory_qa_sample' => 'getSyncInventoryQaSample',
'sync_inventory_sample' => 'getSyncInventorySample',
'inventory_transfer_outbound_return_lookup' => 'getInventoryTransferOutboundReturnLookup',
'inventory_transfer_outbound_return' => 'getInventoryTransferOutboundReturn',
'inventory_convert_undo' => 'getInventoryConvertUndo',
'card_lookup' => 'getCardLookup'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['inventory_convert'] = isset($data['inventory_convert']) ? $data['inventory_convert'] : null;
        $this->container['sale_dispense'] = isset($data['sale_dispense']) ? $data['sale_dispense'] : null;
        $this->container['sale_modify'] = isset($data['sale_modify']) ? $data['sale_modify'] : null;
        $this->container['sale_void'] = isset($data['sale_void']) ? $data['sale_void'] : null;
        $this->container['sale_refund'] = isset($data['sale_refund']) ? $data['sale_refund'] : null;
        $this->container['justauthenticate'] = isset($data['justauthenticate']) ? $data['justauthenticate'] : null;
        $this->container['employee_add'] = isset($data['employee_add']) ? $data['employee_add'] : null;
        $this->container['employee_modify'] = isset($data['employee_modify']) ? $data['employee_modify'] : null;
        $this->container['employee_remove'] = isset($data['employee_remove']) ? $data['employee_remove'] : null;
        $this->container['vehicle_add'] = isset($data['vehicle_add']) ? $data['vehicle_add'] : null;
        $this->container['vehicle_modify'] = isset($data['vehicle_modify']) ? $data['vehicle_modify'] : null;
        $this->container['vehicle_remove'] = isset($data['vehicle_remove']) ? $data['vehicle_remove'] : null;
        $this->container['plant_room_add'] = isset($data['plant_room_add']) ? $data['plant_room_add'] : null;
        $this->container['plant_room_modify'] = isset($data['plant_room_modify']) ? $data['plant_room_modify'] : null;
        $this->container['plant_room_remove'] = isset($data['plant_room_remove']) ? $data['plant_room_remove'] : null;
        $this->container['inventory_room_add'] = isset($data['inventory_room_add']) ? $data['inventory_room_add'] : null;
        $this->container['inventory_room_modify'] = isset($data['inventory_room_modify']) ? $data['inventory_room_modify'] : null;
        $this->container['inventory_room_remove'] = isset($data['inventory_room_remove']) ? $data['inventory_room_remove'] : null;
        $this->container['plant_destroy_schedule'] = isset($data['plant_destroy_schedule']) ? $data['plant_destroy_schedule'] : null;
        $this->container['plant_destroy_schedule_undo'] = isset($data['plant_destroy_schedule_undo']) ? $data['plant_destroy_schedule_undo'] : null;
        $this->container['plant_destroy'] = isset($data['plant_destroy']) ? $data['plant_destroy'] : null;
        $this->container['plant_harvest_schedule'] = isset($data['plant_harvest_schedule']) ? $data['plant_harvest_schedule'] : null;
        $this->container['plant_harvest_schedule_undo'] = isset($data['plant_harvest_schedule_undo']) ? $data['plant_harvest_schedule_undo'] : null;
        $this->container['plant_harvest'] = isset($data['plant_harvest']) ? $data['plant_harvest'] : null;
        $this->container['plant_new'] = isset($data['plant_new']) ? $data['plant_new'] : null;
        $this->container['plant_new_undo'] = isset($data['plant_new_undo']) ? $data['plant_new_undo'] : null;
        $this->container['plant_convert_to_inventory'] = isset($data['plant_convert_to_inventory']) ? $data['plant_convert_to_inventory'] : null;
        $this->container['plant_cure'] = isset($data['plant_cure']) ? $data['plant_cure'] : null;
        $this->container['plant_yield_modify'] = isset($data['plant_yield_modify']) ? $data['plant_yield_modify'] : null;
        $this->container['plant_waste_weigh'] = isset($data['plant_waste_weigh']) ? $data['plant_waste_weigh'] : null;
        $this->container['inventory_new'] = isset($data['inventory_new']) ? $data['inventory_new'] : null;
        $this->container['inventory_manifest_lookup'] = isset($data['inventory_manifest_lookup']) ? $data['inventory_manifest_lookup'] : null;
        $this->container['inventory_transfer_inbound'] = isset($data['inventory_transfer_inbound']) ? $data['inventory_transfer_inbound'] : null;
        $this->container['inventory_transfer_inbound_modify'] = isset($data['inventory_transfer_inbound_modify']) ? $data['inventory_transfer_inbound_modify'] : null;
        $this->container['inventory_transfer_lookup'] = isset($data['inventory_transfer_lookup']) ? $data['inventory_transfer_lookup'] : null;
        $this->container['inventory_transfer_outbound'] = isset($data['inventory_transfer_outbound']) ? $data['inventory_transfer_outbound'] : null;
        $this->container['inventory_transfer_outbound_modify'] = isset($data['inventory_transfer_outbound_modify']) ? $data['inventory_transfer_outbound_modify'] : null;
        $this->container['inventory_transfer_outbound_void'] = isset($data['inventory_transfer_outbound_void']) ? $data['inventory_transfer_outbound_void'] : null;
        $this->container['plant_move'] = isset($data['plant_move']) ? $data['plant_move'] : null;
        $this->container['plant_modify'] = isset($data['plant_modify']) ? $data['plant_modify'] : null;
        $this->container['inventory_adjust'] = isset($data['inventory_adjust']) ? $data['inventory_adjust'] : null;
        $this->container['inventory_adjust_usable'] = isset($data['inventory_adjust_usable']) ? $data['inventory_adjust_usable'] : null;
        $this->container['inventory_sample'] = isset($data['inventory_sample']) ? $data['inventory_sample'] : null;
        $this->container['inventory_qa_check'] = isset($data['inventory_qa_check']) ? $data['inventory_qa_check'] : null;
        $this->container['inventory_qa_check_all'] = isset($data['inventory_qa_check_all']) ? $data['inventory_qa_check_all'] : null;
        $this->container['inventory_qa_sample'] = isset($data['inventory_qa_sample']) ? $data['inventory_qa_sample'] : null;
        $this->container['inventory_qa_sample_void'] = isset($data['inventory_qa_sample_void']) ? $data['inventory_qa_sample_void'] : null;
        $this->container['inventory_qa_sample_results'] = isset($data['inventory_qa_sample_results']) ? $data['inventory_qa_sample_results'] : null;
        $this->container['inventory_manifest_pickup'] = isset($data['inventory_manifest_pickup']) ? $data['inventory_manifest_pickup'] : null;
        $this->container['inventory_manifest_modify'] = isset($data['inventory_manifest_modify']) ? $data['inventory_manifest_modify'] : null;
        $this->container['inventory_manifest'] = isset($data['inventory_manifest']) ? $data['inventory_manifest'] : null;
        $this->container['inventory_manifest_void'] = isset($data['inventory_manifest_void']) ? $data['inventory_manifest_void'] : null;
        $this->container['inventory_manifest_void_stop'] = isset($data['inventory_manifest_void_stop']) ? $data['inventory_manifest_void_stop'] : null;
        $this->container['inventory_manifest_void_items'] = isset($data['inventory_manifest_void_items']) ? $data['inventory_manifest_void_items'] : null;
        $this->container['inventory_create_lot'] = isset($data['inventory_create_lot']) ? $data['inventory_create_lot'] : null;
        $this->container['inventory_split'] = isset($data['inventory_split']) ? $data['inventory_split'] : null;
        $this->container['user_add'] = isset($data['user_add']) ? $data['user_add'] : null;
        $this->container['user_modify'] = isset($data['user_modify']) ? $data['user_modify'] : null;
        $this->container['user_remove'] = isset($data['user_remove']) ? $data['user_remove'] : null;
        $this->container['inventory_move'] = isset($data['inventory_move']) ? $data['inventory_move'] : null;
        $this->container['inventory_destroy_schedule'] = isset($data['inventory_destroy_schedule']) ? $data['inventory_destroy_schedule'] : null;
        $this->container['inventory_destroy_schedule_undo'] = isset($data['inventory_destroy_schedule_undo']) ? $data['inventory_destroy_schedule_undo'] : null;
        $this->container['inventory_destroy'] = isset($data['inventory_destroy']) ? $data['inventory_destroy'] : null;
        $this->container['tax_obligation_file'] = isset($data['tax_obligation_file']) ? $data['tax_obligation_file'] : null;
        $this->container['nonce_replay'] = isset($data['nonce_replay']) ? $data['nonce_replay'] : null;
        $this->container['sync_vehicle'] = isset($data['sync_vehicle']) ? $data['sync_vehicle'] : null;
        $this->container['sync_employee'] = isset($data['sync_employee']) ? $data['sync_employee'] : null;
        $this->container['sync_plant_room'] = isset($data['sync_plant_room']) ? $data['sync_plant_room'] : null;
        $this->container['sync_inventory_room'] = isset($data['sync_inventory_room']) ? $data['sync_inventory_room'] : null;
        $this->container['sync_inventory'] = isset($data['sync_inventory']) ? $data['sync_inventory'] : null;
        $this->container['sync_plant'] = isset($data['sync_plant']) ? $data['sync_plant'] : null;
        $this->container['sync_plant_derivative'] = isset($data['sync_plant_derivative']) ? $data['sync_plant_derivative'] : null;
        $this->container['sync_manifest'] = isset($data['sync_manifest']) ? $data['sync_manifest'] : null;
        $this->container['sync_inventory_transfer'] = isset($data['sync_inventory_transfer']) ? $data['sync_inventory_transfer'] : null;
        $this->container['sync_inventory_transfer_inbound'] = isset($data['sync_inventory_transfer_inbound']) ? $data['sync_inventory_transfer_inbound'] : null;
        $this->container['sync_sale'] = isset($data['sync_sale']) ? $data['sync_sale'] : null;
        $this->container['sync_tax_report'] = isset($data['sync_tax_report']) ? $data['sync_tax_report'] : null;
        $this->container['sync_vendor'] = isset($data['sync_vendor']) ? $data['sync_vendor'] : null;
        $this->container['sync_qa_lab'] = isset($data['sync_qa_lab']) ? $data['sync_qa_lab'] : null;
        $this->container['sync_check'] = isset($data['sync_check']) ? $data['sync_check'] : null;
        $this->container['sync_inventory_adjust'] = isset($data['sync_inventory_adjust']) ? $data['sync_inventory_adjust'] : null;
        $this->container['sync_inventory_qa_sample'] = isset($data['sync_inventory_qa_sample']) ? $data['sync_inventory_qa_sample'] : null;
        $this->container['sync_inventory_sample'] = isset($data['sync_inventory_sample']) ? $data['sync_inventory_sample'] : null;
        $this->container['inventory_transfer_outbound_return_lookup'] = isset($data['inventory_transfer_outbound_return_lookup']) ? $data['inventory_transfer_outbound_return_lookup'] : null;
        $this->container['inventory_transfer_outbound_return'] = isset($data['inventory_transfer_outbound_return']) ? $data['inventory_transfer_outbound_return'] : null;
        $this->container['inventory_convert_undo'] = isset($data['inventory_convert_undo']) ? $data['inventory_convert_undo'] : null;
        $this->container['card_lookup'] = isset($data['card_lookup']) ? $data['card_lookup'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets inventory_convert
     *
     * @return string
     */
    public function getInventoryConvert()
    {
        return $this->container['inventory_convert'];
    }

    /**
     * Sets inventory_convert
     *
     * @param string $inventory_convert inventory_convert
     *
     * @return $this
     */
    public function setInventoryConvert($inventory_convert)
    {
        $this->container['inventory_convert'] = $inventory_convert;

        return $this;
    }

    /**
     * Gets sale_dispense
     *
     * @return string
     */
    public function getSaleDispense()
    {
        return $this->container['sale_dispense'];
    }

    /**
     * Sets sale_dispense
     *
     * @param string $sale_dispense sale_dispense
     *
     * @return $this
     */
    public function setSaleDispense($sale_dispense)
    {
        $this->container['sale_dispense'] = $sale_dispense;

        return $this;
    }

    /**
     * Gets sale_modify
     *
     * @return string
     */
    public function getSaleModify()
    {
        return $this->container['sale_modify'];
    }

    /**
     * Sets sale_modify
     *
     * @param string $sale_modify sale_modify
     *
     * @return $this
     */
    public function setSaleModify($sale_modify)
    {
        $this->container['sale_modify'] = $sale_modify;

        return $this;
    }

    /**
     * Gets sale_void
     *
     * @return string
     */
    public function getSaleVoid()
    {
        return $this->container['sale_void'];
    }

    /**
     * Sets sale_void
     *
     * @param string $sale_void sale_void
     *
     * @return $this
     */
    public function setSaleVoid($sale_void)
    {
        $this->container['sale_void'] = $sale_void;

        return $this;
    }

    /**
     * Gets sale_refund
     *
     * @return string
     */
    public function getSaleRefund()
    {
        return $this->container['sale_refund'];
    }

    /**
     * Sets sale_refund
     *
     * @param string $sale_refund sale_refund
     *
     * @return $this
     */
    public function setSaleRefund($sale_refund)
    {
        $this->container['sale_refund'] = $sale_refund;

        return $this;
    }

    /**
     * Gets justauthenticate
     *
     * @return string
     */
    public function getJustauthenticate()
    {
        return $this->container['justauthenticate'];
    }

    /**
     * Sets justauthenticate
     *
     * @param string $justauthenticate justauthenticate
     *
     * @return $this
     */
    public function setJustauthenticate($justauthenticate)
    {
        $this->container['justauthenticate'] = $justauthenticate;

        return $this;
    }

    /**
     * Gets employee_add
     *
     * @return string
     */
    public function getEmployeeAdd()
    {
        return $this->container['employee_add'];
    }

    /**
     * Sets employee_add
     *
     * @param string $employee_add employee_add
     *
     * @return $this
     */
    public function setEmployeeAdd($employee_add)
    {
        $this->container['employee_add'] = $employee_add;

        return $this;
    }

    /**
     * Gets employee_modify
     *
     * @return string
     */
    public function getEmployeeModify()
    {
        return $this->container['employee_modify'];
    }

    /**
     * Sets employee_modify
     *
     * @param string $employee_modify employee_modify
     *
     * @return $this
     */
    public function setEmployeeModify($employee_modify)
    {
        $this->container['employee_modify'] = $employee_modify;

        return $this;
    }

    /**
     * Gets employee_remove
     *
     * @return string
     */
    public function getEmployeeRemove()
    {
        return $this->container['employee_remove'];
    }

    /**
     * Sets employee_remove
     *
     * @param string $employee_remove employee_remove
     *
     * @return $this
     */
    public function setEmployeeRemove($employee_remove)
    {
        $this->container['employee_remove'] = $employee_remove;

        return $this;
    }

    /**
     * Gets vehicle_add
     *
     * @return string
     */
    public function getVehicleAdd()
    {
        return $this->container['vehicle_add'];
    }

    /**
     * Sets vehicle_add
     *
     * @param string $vehicle_add vehicle_add
     *
     * @return $this
     */
    public function setVehicleAdd($vehicle_add)
    {
        $this->container['vehicle_add'] = $vehicle_add;

        return $this;
    }

    /**
     * Gets vehicle_modify
     *
     * @return string
     */
    public function getVehicleModify()
    {
        return $this->container['vehicle_modify'];
    }

    /**
     * Sets vehicle_modify
     *
     * @param string $vehicle_modify vehicle_modify
     *
     * @return $this
     */
    public function setVehicleModify($vehicle_modify)
    {
        $this->container['vehicle_modify'] = $vehicle_modify;

        return $this;
    }

    /**
     * Gets vehicle_remove
     *
     * @return string
     */
    public function getVehicleRemove()
    {
        return $this->container['vehicle_remove'];
    }

    /**
     * Sets vehicle_remove
     *
     * @param string $vehicle_remove vehicle_remove
     *
     * @return $this
     */
    public function setVehicleRemove($vehicle_remove)
    {
        $this->container['vehicle_remove'] = $vehicle_remove;

        return $this;
    }

    /**
     * Gets plant_room_add
     *
     * @return string
     */
    public function getPlantRoomAdd()
    {
        return $this->container['plant_room_add'];
    }

    /**
     * Sets plant_room_add
     *
     * @param string $plant_room_add plant_room_add
     *
     * @return $this
     */
    public function setPlantRoomAdd($plant_room_add)
    {
        $this->container['plant_room_add'] = $plant_room_add;

        return $this;
    }

    /**
     * Gets plant_room_modify
     *
     * @return string
     */
    public function getPlantRoomModify()
    {
        return $this->container['plant_room_modify'];
    }

    /**
     * Sets plant_room_modify
     *
     * @param string $plant_room_modify plant_room_modify
     *
     * @return $this
     */
    public function setPlantRoomModify($plant_room_modify)
    {
        $this->container['plant_room_modify'] = $plant_room_modify;

        return $this;
    }

    /**
     * Gets plant_room_remove
     *
     * @return string
     */
    public function getPlantRoomRemove()
    {
        return $this->container['plant_room_remove'];
    }

    /**
     * Sets plant_room_remove
     *
     * @param string $plant_room_remove plant_room_remove
     *
     * @return $this
     */
    public function setPlantRoomRemove($plant_room_remove)
    {
        $this->container['plant_room_remove'] = $plant_room_remove;

        return $this;
    }

    /**
     * Gets inventory_room_add
     *
     * @return string
     */
    public function getInventoryRoomAdd()
    {
        return $this->container['inventory_room_add'];
    }

    /**
     * Sets inventory_room_add
     *
     * @param string $inventory_room_add inventory_room_add
     *
     * @return $this
     */
    public function setInventoryRoomAdd($inventory_room_add)
    {
        $this->container['inventory_room_add'] = $inventory_room_add;

        return $this;
    }

    /**
     * Gets inventory_room_modify
     *
     * @return string
     */
    public function getInventoryRoomModify()
    {
        return $this->container['inventory_room_modify'];
    }

    /**
     * Sets inventory_room_modify
     *
     * @param string $inventory_room_modify inventory_room_modify
     *
     * @return $this
     */
    public function setInventoryRoomModify($inventory_room_modify)
    {
        $this->container['inventory_room_modify'] = $inventory_room_modify;

        return $this;
    }

    /**
     * Gets inventory_room_remove
     *
     * @return string
     */
    public function getInventoryRoomRemove()
    {
        return $this->container['inventory_room_remove'];
    }

    /**
     * Sets inventory_room_remove
     *
     * @param string $inventory_room_remove inventory_room_remove
     *
     * @return $this
     */
    public function setInventoryRoomRemove($inventory_room_remove)
    {
        $this->container['inventory_room_remove'] = $inventory_room_remove;

        return $this;
    }

    /**
     * Gets plant_destroy_schedule
     *
     * @return string
     */
    public function getPlantDestroySchedule()
    {
        return $this->container['plant_destroy_schedule'];
    }

    /**
     * Sets plant_destroy_schedule
     *
     * @param string $plant_destroy_schedule plant_destroy_schedule
     *
     * @return $this
     */
    public function setPlantDestroySchedule($plant_destroy_schedule)
    {
        $this->container['plant_destroy_schedule'] = $plant_destroy_schedule;

        return $this;
    }

    /**
     * Gets plant_destroy_schedule_undo
     *
     * @return string
     */
    public function getPlantDestroyScheduleUndo()
    {
        return $this->container['plant_destroy_schedule_undo'];
    }

    /**
     * Sets plant_destroy_schedule_undo
     *
     * @param string $plant_destroy_schedule_undo plant_destroy_schedule_undo
     *
     * @return $this
     */
    public function setPlantDestroyScheduleUndo($plant_destroy_schedule_undo)
    {
        $this->container['plant_destroy_schedule_undo'] = $plant_destroy_schedule_undo;

        return $this;
    }

    /**
     * Gets plant_destroy
     *
     * @return string
     */
    public function getPlantDestroy()
    {
        return $this->container['plant_destroy'];
    }

    /**
     * Sets plant_destroy
     *
     * @param string $plant_destroy plant_destroy
     *
     * @return $this
     */
    public function setPlantDestroy($plant_destroy)
    {
        $this->container['plant_destroy'] = $plant_destroy;

        return $this;
    }

    /**
     * Gets plant_harvest_schedule
     *
     * @return string
     */
    public function getPlantHarvestSchedule()
    {
        return $this->container['plant_harvest_schedule'];
    }

    /**
     * Sets plant_harvest_schedule
     *
     * @param string $plant_harvest_schedule plant_harvest_schedule
     *
     * @return $this
     */
    public function setPlantHarvestSchedule($plant_harvest_schedule)
    {
        $this->container['plant_harvest_schedule'] = $plant_harvest_schedule;

        return $this;
    }

    /**
     * Gets plant_harvest_schedule_undo
     *
     * @return string
     */
    public function getPlantHarvestScheduleUndo()
    {
        return $this->container['plant_harvest_schedule_undo'];
    }

    /**
     * Sets plant_harvest_schedule_undo
     *
     * @param string $plant_harvest_schedule_undo plant_harvest_schedule_undo
     *
     * @return $this
     */
    public function setPlantHarvestScheduleUndo($plant_harvest_schedule_undo)
    {
        $this->container['plant_harvest_schedule_undo'] = $plant_harvest_schedule_undo;

        return $this;
    }

    /**
     * Gets plant_harvest
     *
     * @return string
     */
    public function getPlantHarvest()
    {
        return $this->container['plant_harvest'];
    }

    /**
     * Sets plant_harvest
     *
     * @param string $plant_harvest plant_harvest
     *
     * @return $this
     */
    public function setPlantHarvest($plant_harvest)
    {
        $this->container['plant_harvest'] = $plant_harvest;

        return $this;
    }

    /**
     * Gets plant_new
     *
     * @return string
     */
    public function getPlantNew()
    {
        return $this->container['plant_new'];
    }

    /**
     * Sets plant_new
     *
     * @param string $plant_new plant_new
     *
     * @return $this
     */
    public function setPlantNew($plant_new)
    {
        $this->container['plant_new'] = $plant_new;

        return $this;
    }

    /**
     * Gets plant_new_undo
     *
     * @return string
     */
    public function getPlantNewUndo()
    {
        return $this->container['plant_new_undo'];
    }

    /**
     * Sets plant_new_undo
     *
     * @param string $plant_new_undo plant_new_undo
     *
     * @return $this
     */
    public function setPlantNewUndo($plant_new_undo)
    {
        $this->container['plant_new_undo'] = $plant_new_undo;

        return $this;
    }

    /**
     * Gets plant_convert_to_inventory
     *
     * @return string
     */
    public function getPlantConvertToInventory()
    {
        return $this->container['plant_convert_to_inventory'];
    }

    /**
     * Sets plant_convert_to_inventory
     *
     * @param string $plant_convert_to_inventory plant_convert_to_inventory
     *
     * @return $this
     */
    public function setPlantConvertToInventory($plant_convert_to_inventory)
    {
        $this->container['plant_convert_to_inventory'] = $plant_convert_to_inventory;

        return $this;
    }

    /**
     * Gets plant_cure
     *
     * @return string
     */
    public function getPlantCure()
    {
        return $this->container['plant_cure'];
    }

    /**
     * Sets plant_cure
     *
     * @param string $plant_cure plant_cure
     *
     * @return $this
     */
    public function setPlantCure($plant_cure)
    {
        $this->container['plant_cure'] = $plant_cure;

        return $this;
    }

    /**
     * Gets plant_yield_modify
     *
     * @return string
     */
    public function getPlantYieldModify()
    {
        return $this->container['plant_yield_modify'];
    }

    /**
     * Sets plant_yield_modify
     *
     * @param string $plant_yield_modify plant_yield_modify
     *
     * @return $this
     */
    public function setPlantYieldModify($plant_yield_modify)
    {
        $this->container['plant_yield_modify'] = $plant_yield_modify;

        return $this;
    }

    /**
     * Gets plant_waste_weigh
     *
     * @return string
     */
    public function getPlantWasteWeigh()
    {
        return $this->container['plant_waste_weigh'];
    }

    /**
     * Sets plant_waste_weigh
     *
     * @param string $plant_waste_weigh plant_waste_weigh
     *
     * @return $this
     */
    public function setPlantWasteWeigh($plant_waste_weigh)
    {
        $this->container['plant_waste_weigh'] = $plant_waste_weigh;

        return $this;
    }

    /**
     * Gets inventory_new
     *
     * @return string
     */
    public function getInventoryNew()
    {
        return $this->container['inventory_new'];
    }

    /**
     * Sets inventory_new
     *
     * @param string $inventory_new inventory_new
     *
     * @return $this
     */
    public function setInventoryNew($inventory_new)
    {
        $this->container['inventory_new'] = $inventory_new;

        return $this;
    }

    /**
     * Gets inventory_manifest_lookup
     *
     * @return string
     */
    public function getInventoryManifestLookup()
    {
        return $this->container['inventory_manifest_lookup'];
    }

    /**
     * Sets inventory_manifest_lookup
     *
     * @param string $inventory_manifest_lookup inventory_manifest_lookup
     *
     * @return $this
     */
    public function setInventoryManifestLookup($inventory_manifest_lookup)
    {
        $this->container['inventory_manifest_lookup'] = $inventory_manifest_lookup;

        return $this;
    }

    /**
     * Gets inventory_transfer_inbound
     *
     * @return string
     */
    public function getInventoryTransferInbound()
    {
        return $this->container['inventory_transfer_inbound'];
    }

    /**
     * Sets inventory_transfer_inbound
     *
     * @param string $inventory_transfer_inbound inventory_transfer_inbound
     *
     * @return $this
     */
    public function setInventoryTransferInbound($inventory_transfer_inbound)
    {
        $this->container['inventory_transfer_inbound'] = $inventory_transfer_inbound;

        return $this;
    }

    /**
     * Gets inventory_transfer_inbound_modify
     *
     * @return string
     */
    public function getInventoryTransferInboundModify()
    {
        return $this->container['inventory_transfer_inbound_modify'];
    }

    /**
     * Sets inventory_transfer_inbound_modify
     *
     * @param string $inventory_transfer_inbound_modify inventory_transfer_inbound_modify
     *
     * @return $this
     */
    public function setInventoryTransferInboundModify($inventory_transfer_inbound_modify)
    {
        $this->container['inventory_transfer_inbound_modify'] = $inventory_transfer_inbound_modify;

        return $this;
    }

    /**
     * Gets inventory_transfer_lookup
     *
     * @return string
     */
    public function getInventoryTransferLookup()
    {
        return $this->container['inventory_transfer_lookup'];
    }

    /**
     * Sets inventory_transfer_lookup
     *
     * @param string $inventory_transfer_lookup inventory_transfer_lookup
     *
     * @return $this
     */
    public function setInventoryTransferLookup($inventory_transfer_lookup)
    {
        $this->container['inventory_transfer_lookup'] = $inventory_transfer_lookup;

        return $this;
    }

    /**
     * Gets inventory_transfer_outbound
     *
     * @return string
     */
    public function getInventoryTransferOutbound()
    {
        return $this->container['inventory_transfer_outbound'];
    }

    /**
     * Sets inventory_transfer_outbound
     *
     * @param string $inventory_transfer_outbound inventory_transfer_outbound
     *
     * @return $this
     */
    public function setInventoryTransferOutbound($inventory_transfer_outbound)
    {
        $this->container['inventory_transfer_outbound'] = $inventory_transfer_outbound;

        return $this;
    }

    /**
     * Gets inventory_transfer_outbound_modify
     *
     * @return string
     */
    public function getInventoryTransferOutboundModify()
    {
        return $this->container['inventory_transfer_outbound_modify'];
    }

    /**
     * Sets inventory_transfer_outbound_modify
     *
     * @param string $inventory_transfer_outbound_modify inventory_transfer_outbound_modify
     *
     * @return $this
     */
    public function setInventoryTransferOutboundModify($inventory_transfer_outbound_modify)
    {
        $this->container['inventory_transfer_outbound_modify'] = $inventory_transfer_outbound_modify;

        return $this;
    }

    /**
     * Gets inventory_transfer_outbound_void
     *
     * @return string
     */
    public function getInventoryTransferOutboundVoid()
    {
        return $this->container['inventory_transfer_outbound_void'];
    }

    /**
     * Sets inventory_transfer_outbound_void
     *
     * @param string $inventory_transfer_outbound_void inventory_transfer_outbound_void
     *
     * @return $this
     */
    public function setInventoryTransferOutboundVoid($inventory_transfer_outbound_void)
    {
        $this->container['inventory_transfer_outbound_void'] = $inventory_transfer_outbound_void;

        return $this;
    }

    /**
     * Gets plant_move
     *
     * @return string
     */
    public function getPlantMove()
    {
        return $this->container['plant_move'];
    }

    /**
     * Sets plant_move
     *
     * @param string $plant_move plant_move
     *
     * @return $this
     */
    public function setPlantMove($plant_move)
    {
        $this->container['plant_move'] = $plant_move;

        return $this;
    }

    /**
     * Gets plant_modify
     *
     * @return string
     */
    public function getPlantModify()
    {
        return $this->container['plant_modify'];
    }

    /**
     * Sets plant_modify
     *
     * @param string $plant_modify plant_modify
     *
     * @return $this
     */
    public function setPlantModify($plant_modify)
    {
        $this->container['plant_modify'] = $plant_modify;

        return $this;
    }

    /**
     * Gets inventory_adjust
     *
     * @return string
     */
    public function getInventoryAdjust()
    {
        return $this->container['inventory_adjust'];
    }

    /**
     * Sets inventory_adjust
     *
     * @param string $inventory_adjust inventory_adjust
     *
     * @return $this
     */
    public function setInventoryAdjust($inventory_adjust)
    {
        $this->container['inventory_adjust'] = $inventory_adjust;

        return $this;
    }

    /**
     * Gets inventory_adjust_usable
     *
     * @return string
     */
    public function getInventoryAdjustUsable()
    {
        return $this->container['inventory_adjust_usable'];
    }

    /**
     * Sets inventory_adjust_usable
     *
     * @param string $inventory_adjust_usable inventory_adjust_usable
     *
     * @return $this
     */
    public function setInventoryAdjustUsable($inventory_adjust_usable)
    {
        $this->container['inventory_adjust_usable'] = $inventory_adjust_usable;

        return $this;
    }

    /**
     * Gets inventory_sample
     *
     * @return string
     */
    public function getInventorySample()
    {
        return $this->container['inventory_sample'];
    }

    /**
     * Sets inventory_sample
     *
     * @param string $inventory_sample inventory_sample
     *
     * @return $this
     */
    public function setInventorySample($inventory_sample)
    {
        $this->container['inventory_sample'] = $inventory_sample;

        return $this;
    }

    /**
     * Gets inventory_qa_check
     *
     * @return string
     */
    public function getInventoryQaCheck()
    {
        return $this->container['inventory_qa_check'];
    }

    /**
     * Sets inventory_qa_check
     *
     * @param string $inventory_qa_check inventory_qa_check
     *
     * @return $this
     */
    public function setInventoryQaCheck($inventory_qa_check)
    {
        $this->container['inventory_qa_check'] = $inventory_qa_check;

        return $this;
    }

    /**
     * Gets inventory_qa_check_all
     *
     * @return string
     */
    public function getInventoryQaCheckAll()
    {
        return $this->container['inventory_qa_check_all'];
    }

    /**
     * Sets inventory_qa_check_all
     *
     * @param string $inventory_qa_check_all inventory_qa_check_all
     *
     * @return $this
     */
    public function setInventoryQaCheckAll($inventory_qa_check_all)
    {
        $this->container['inventory_qa_check_all'] = $inventory_qa_check_all;

        return $this;
    }

    /**
     * Gets inventory_qa_sample
     *
     * @return string
     */
    public function getInventoryQaSample()
    {
        return $this->container['inventory_qa_sample'];
    }

    /**
     * Sets inventory_qa_sample
     *
     * @param string $inventory_qa_sample inventory_qa_sample
     *
     * @return $this
     */
    public function setInventoryQaSample($inventory_qa_sample)
    {
        $this->container['inventory_qa_sample'] = $inventory_qa_sample;

        return $this;
    }

    /**
     * Gets inventory_qa_sample_void
     *
     * @return string
     */
    public function getInventoryQaSampleVoid()
    {
        return $this->container['inventory_qa_sample_void'];
    }

    /**
     * Sets inventory_qa_sample_void
     *
     * @param string $inventory_qa_sample_void inventory_qa_sample_void
     *
     * @return $this
     */
    public function setInventoryQaSampleVoid($inventory_qa_sample_void)
    {
        $this->container['inventory_qa_sample_void'] = $inventory_qa_sample_void;

        return $this;
    }

    /**
     * Gets inventory_qa_sample_results
     *
     * @return string
     */
    public function getInventoryQaSampleResults()
    {
        return $this->container['inventory_qa_sample_results'];
    }

    /**
     * Sets inventory_qa_sample_results
     *
     * @param string $inventory_qa_sample_results inventory_qa_sample_results
     *
     * @return $this
     */
    public function setInventoryQaSampleResults($inventory_qa_sample_results)
    {
        $this->container['inventory_qa_sample_results'] = $inventory_qa_sample_results;

        return $this;
    }

    /**
     * Gets inventory_manifest_pickup
     *
     * @return string
     */
    public function getInventoryManifestPickup()
    {
        return $this->container['inventory_manifest_pickup'];
    }

    /**
     * Sets inventory_manifest_pickup
     *
     * @param string $inventory_manifest_pickup inventory_manifest_pickup
     *
     * @return $this
     */
    public function setInventoryManifestPickup($inventory_manifest_pickup)
    {
        $this->container['inventory_manifest_pickup'] = $inventory_manifest_pickup;

        return $this;
    }

    /**
     * Gets inventory_manifest_modify
     *
     * @return string
     */
    public function getInventoryManifestModify()
    {
        return $this->container['inventory_manifest_modify'];
    }

    /**
     * Sets inventory_manifest_modify
     *
     * @param string $inventory_manifest_modify inventory_manifest_modify
     *
     * @return $this
     */
    public function setInventoryManifestModify($inventory_manifest_modify)
    {
        $this->container['inventory_manifest_modify'] = $inventory_manifest_modify;

        return $this;
    }

    /**
     * Gets inventory_manifest
     *
     * @return string
     */
    public function getInventoryManifest()
    {
        return $this->container['inventory_manifest'];
    }

    /**
     * Sets inventory_manifest
     *
     * @param string $inventory_manifest inventory_manifest
     *
     * @return $this
     */
    public function setInventoryManifest($inventory_manifest)
    {
        $this->container['inventory_manifest'] = $inventory_manifest;

        return $this;
    }

    /**
     * Gets inventory_manifest_void
     *
     * @return string
     */
    public function getInventoryManifestVoid()
    {
        return $this->container['inventory_manifest_void'];
    }

    /**
     * Sets inventory_manifest_void
     *
     * @param string $inventory_manifest_void inventory_manifest_void
     *
     * @return $this
     */
    public function setInventoryManifestVoid($inventory_manifest_void)
    {
        $this->container['inventory_manifest_void'] = $inventory_manifest_void;

        return $this;
    }

    /**
     * Gets inventory_manifest_void_stop
     *
     * @return string
     */
    public function getInventoryManifestVoidStop()
    {
        return $this->container['inventory_manifest_void_stop'];
    }

    /**
     * Sets inventory_manifest_void_stop
     *
     * @param string $inventory_manifest_void_stop inventory_manifest_void_stop
     *
     * @return $this
     */
    public function setInventoryManifestVoidStop($inventory_manifest_void_stop)
    {
        $this->container['inventory_manifest_void_stop'] = $inventory_manifest_void_stop;

        return $this;
    }

    /**
     * Gets inventory_manifest_void_items
     *
     * @return string
     */
    public function getInventoryManifestVoidItems()
    {
        return $this->container['inventory_manifest_void_items'];
    }

    /**
     * Sets inventory_manifest_void_items
     *
     * @param string $inventory_manifest_void_items inventory_manifest_void_items
     *
     * @return $this
     */
    public function setInventoryManifestVoidItems($inventory_manifest_void_items)
    {
        $this->container['inventory_manifest_void_items'] = $inventory_manifest_void_items;

        return $this;
    }

    /**
     * Gets inventory_create_lot
     *
     * @return string
     */
    public function getInventoryCreateLot()
    {
        return $this->container['inventory_create_lot'];
    }

    /**
     * Sets inventory_create_lot
     *
     * @param string $inventory_create_lot inventory_create_lot
     *
     * @return $this
     */
    public function setInventoryCreateLot($inventory_create_lot)
    {
        $this->container['inventory_create_lot'] = $inventory_create_lot;

        return $this;
    }

    /**
     * Gets inventory_split
     *
     * @return string
     */
    public function getInventorySplit()
    {
        return $this->container['inventory_split'];
    }

    /**
     * Sets inventory_split
     *
     * @param string $inventory_split inventory_split
     *
     * @return $this
     */
    public function setInventorySplit($inventory_split)
    {
        $this->container['inventory_split'] = $inventory_split;

        return $this;
    }

    /**
     * Gets user_add
     *
     * @return string
     */
    public function getUserAdd()
    {
        return $this->container['user_add'];
    }

    /**
     * Sets user_add
     *
     * @param string $user_add user_add
     *
     * @return $this
     */
    public function setUserAdd($user_add)
    {
        $this->container['user_add'] = $user_add;

        return $this;
    }

    /**
     * Gets user_modify
     *
     * @return string
     */
    public function getUserModify()
    {
        return $this->container['user_modify'];
    }

    /**
     * Sets user_modify
     *
     * @param string $user_modify user_modify
     *
     * @return $this
     */
    public function setUserModify($user_modify)
    {
        $this->container['user_modify'] = $user_modify;

        return $this;
    }

    /**
     * Gets user_remove
     *
     * @return string
     */
    public function getUserRemove()
    {
        return $this->container['user_remove'];
    }

    /**
     * Sets user_remove
     *
     * @param string $user_remove user_remove
     *
     * @return $this
     */
    public function setUserRemove($user_remove)
    {
        $this->container['user_remove'] = $user_remove;

        return $this;
    }

    /**
     * Gets inventory_move
     *
     * @return string
     */
    public function getInventoryMove()
    {
        return $this->container['inventory_move'];
    }

    /**
     * Sets inventory_move
     *
     * @param string $inventory_move inventory_move
     *
     * @return $this
     */
    public function setInventoryMove($inventory_move)
    {
        $this->container['inventory_move'] = $inventory_move;

        return $this;
    }

    /**
     * Gets inventory_destroy_schedule
     *
     * @return string
     */
    public function getInventoryDestroySchedule()
    {
        return $this->container['inventory_destroy_schedule'];
    }

    /**
     * Sets inventory_destroy_schedule
     *
     * @param string $inventory_destroy_schedule inventory_destroy_schedule
     *
     * @return $this
     */
    public function setInventoryDestroySchedule($inventory_destroy_schedule)
    {
        $this->container['inventory_destroy_schedule'] = $inventory_destroy_schedule;

        return $this;
    }

    /**
     * Gets inventory_destroy_schedule_undo
     *
     * @return string
     */
    public function getInventoryDestroyScheduleUndo()
    {
        return $this->container['inventory_destroy_schedule_undo'];
    }

    /**
     * Sets inventory_destroy_schedule_undo
     *
     * @param string $inventory_destroy_schedule_undo inventory_destroy_schedule_undo
     *
     * @return $this
     */
    public function setInventoryDestroyScheduleUndo($inventory_destroy_schedule_undo)
    {
        $this->container['inventory_destroy_schedule_undo'] = $inventory_destroy_schedule_undo;

        return $this;
    }

    /**
     * Gets inventory_destroy
     *
     * @return string
     */
    public function getInventoryDestroy()
    {
        return $this->container['inventory_destroy'];
    }

    /**
     * Sets inventory_destroy
     *
     * @param string $inventory_destroy inventory_destroy
     *
     * @return $this
     */
    public function setInventoryDestroy($inventory_destroy)
    {
        $this->container['inventory_destroy'] = $inventory_destroy;

        return $this;
    }

    /**
     * Gets tax_obligation_file
     *
     * @return string
     */
    public function getTaxObligationFile()
    {
        return $this->container['tax_obligation_file'];
    }

    /**
     * Sets tax_obligation_file
     *
     * @param string $tax_obligation_file tax_obligation_file
     *
     * @return $this
     */
    public function setTaxObligationFile($tax_obligation_file)
    {
        $this->container['tax_obligation_file'] = $tax_obligation_file;

        return $this;
    }

    /**
     * Gets nonce_replay
     *
     * @return string
     */
    public function getNonceReplay()
    {
        return $this->container['nonce_replay'];
    }

    /**
     * Sets nonce_replay
     *
     * @param string $nonce_replay nonce_replay
     *
     * @return $this
     */
    public function setNonceReplay($nonce_replay)
    {
        $this->container['nonce_replay'] = $nonce_replay;

        return $this;
    }

    /**
     * Gets sync_vehicle
     *
     * @return string
     */
    public function getSyncVehicle()
    {
        return $this->container['sync_vehicle'];
    }

    /**
     * Sets sync_vehicle
     *
     * @param string $sync_vehicle sync_vehicle
     *
     * @return $this
     */
    public function setSyncVehicle($sync_vehicle)
    {
        $this->container['sync_vehicle'] = $sync_vehicle;

        return $this;
    }

    /**
     * Gets sync_employee
     *
     * @return string
     */
    public function getSyncEmployee()
    {
        return $this->container['sync_employee'];
    }

    /**
     * Sets sync_employee
     *
     * @param string $sync_employee sync_employee
     *
     * @return $this
     */
    public function setSyncEmployee($sync_employee)
    {
        $this->container['sync_employee'] = $sync_employee;

        return $this;
    }

    /**
     * Gets sync_plant_room
     *
     * @return string
     */
    public function getSyncPlantRoom()
    {
        return $this->container['sync_plant_room'];
    }

    /**
     * Sets sync_plant_room
     *
     * @param string $sync_plant_room sync_plant_room
     *
     * @return $this
     */
    public function setSyncPlantRoom($sync_plant_room)
    {
        $this->container['sync_plant_room'] = $sync_plant_room;

        return $this;
    }

    /**
     * Gets sync_inventory_room
     *
     * @return string
     */
    public function getSyncInventoryRoom()
    {
        return $this->container['sync_inventory_room'];
    }

    /**
     * Sets sync_inventory_room
     *
     * @param string $sync_inventory_room sync_inventory_room
     *
     * @return $this
     */
    public function setSyncInventoryRoom($sync_inventory_room)
    {
        $this->container['sync_inventory_room'] = $sync_inventory_room;

        return $this;
    }

    /**
     * Gets sync_inventory
     *
     * @return string
     */
    public function getSyncInventory()
    {
        return $this->container['sync_inventory'];
    }

    /**
     * Sets sync_inventory
     *
     * @param string $sync_inventory sync_inventory
     *
     * @return $this
     */
    public function setSyncInventory($sync_inventory)
    {
        $this->container['sync_inventory'] = $sync_inventory;

        return $this;
    }

    /**
     * Gets sync_plant
     *
     * @return string
     */
    public function getSyncPlant()
    {
        return $this->container['sync_plant'];
    }

    /**
     * Sets sync_plant
     *
     * @param string $sync_plant sync_plant
     *
     * @return $this
     */
    public function setSyncPlant($sync_plant)
    {
        $this->container['sync_plant'] = $sync_plant;

        return $this;
    }

    /**
     * Gets sync_plant_derivative
     *
     * @return string
     */
    public function getSyncPlantDerivative()
    {
        return $this->container['sync_plant_derivative'];
    }

    /**
     * Sets sync_plant_derivative
     *
     * @param string $sync_plant_derivative sync_plant_derivative
     *
     * @return $this
     */
    public function setSyncPlantDerivative($sync_plant_derivative)
    {
        $this->container['sync_plant_derivative'] = $sync_plant_derivative;

        return $this;
    }

    /**
     * Gets sync_manifest
     *
     * @return string
     */
    public function getSyncManifest()
    {
        return $this->container['sync_manifest'];
    }

    /**
     * Sets sync_manifest
     *
     * @param string $sync_manifest sync_manifest
     *
     * @return $this
     */
    public function setSyncManifest($sync_manifest)
    {
        $this->container['sync_manifest'] = $sync_manifest;

        return $this;
    }

    /**
     * Gets sync_inventory_transfer
     *
     * @return string
     */
    public function getSyncInventoryTransfer()
    {
        return $this->container['sync_inventory_transfer'];
    }

    /**
     * Sets sync_inventory_transfer
     *
     * @param string $sync_inventory_transfer sync_inventory_transfer
     *
     * @return $this
     */
    public function setSyncInventoryTransfer($sync_inventory_transfer)
    {
        $this->container['sync_inventory_transfer'] = $sync_inventory_transfer;

        return $this;
    }

    /**
     * Gets sync_inventory_transfer_inbound
     *
     * @return string
     */
    public function getSyncInventoryTransferInbound()
    {
        return $this->container['sync_inventory_transfer_inbound'];
    }

    /**
     * Sets sync_inventory_transfer_inbound
     *
     * @param string $sync_inventory_transfer_inbound sync_inventory_transfer_inbound
     *
     * @return $this
     */
    public function setSyncInventoryTransferInbound($sync_inventory_transfer_inbound)
    {
        $this->container['sync_inventory_transfer_inbound'] = $sync_inventory_transfer_inbound;

        return $this;
    }

    /**
     * Gets sync_sale
     *
     * @return string
     */
    public function getSyncSale()
    {
        return $this->container['sync_sale'];
    }

    /**
     * Sets sync_sale
     *
     * @param string $sync_sale sync_sale
     *
     * @return $this
     */
    public function setSyncSale($sync_sale)
    {
        $this->container['sync_sale'] = $sync_sale;

        return $this;
    }

    /**
     * Gets sync_tax_report
     *
     * @return string
     */
    public function getSyncTaxReport()
    {
        return $this->container['sync_tax_report'];
    }

    /**
     * Sets sync_tax_report
     *
     * @param string $sync_tax_report sync_tax_report
     *
     * @return $this
     */
    public function setSyncTaxReport($sync_tax_report)
    {
        $this->container['sync_tax_report'] = $sync_tax_report;

        return $this;
    }

    /**
     * Gets sync_vendor
     *
     * @return string
     */
    public function getSyncVendor()
    {
        return $this->container['sync_vendor'];
    }

    /**
     * Sets sync_vendor
     *
     * @param string $sync_vendor sync_vendor
     *
     * @return $this
     */
    public function setSyncVendor($sync_vendor)
    {
        $this->container['sync_vendor'] = $sync_vendor;

        return $this;
    }

    /**
     * Gets sync_qa_lab
     *
     * @return string
     */
    public function getSyncQaLab()
    {
        return $this->container['sync_qa_lab'];
    }

    /**
     * Sets sync_qa_lab
     *
     * @param string $sync_qa_lab sync_qa_lab
     *
     * @return $this
     */
    public function setSyncQaLab($sync_qa_lab)
    {
        $this->container['sync_qa_lab'] = $sync_qa_lab;

        return $this;
    }

    /**
     * Gets sync_check
     *
     * @return string
     */
    public function getSyncCheck()
    {
        return $this->container['sync_check'];
    }

    /**
     * Sets sync_check
     *
     * @param string $sync_check sync_check
     *
     * @return $this
     */
    public function setSyncCheck($sync_check)
    {
        $this->container['sync_check'] = $sync_check;

        return $this;
    }

    /**
     * Gets sync_inventory_adjust
     *
     * @return string
     */
    public function getSyncInventoryAdjust()
    {
        return $this->container['sync_inventory_adjust'];
    }

    /**
     * Sets sync_inventory_adjust
     *
     * @param string $sync_inventory_adjust sync_inventory_adjust
     *
     * @return $this
     */
    public function setSyncInventoryAdjust($sync_inventory_adjust)
    {
        $this->container['sync_inventory_adjust'] = $sync_inventory_adjust;

        return $this;
    }

    /**
     * Gets sync_inventory_qa_sample
     *
     * @return string
     */
    public function getSyncInventoryQaSample()
    {
        return $this->container['sync_inventory_qa_sample'];
    }

    /**
     * Sets sync_inventory_qa_sample
     *
     * @param string $sync_inventory_qa_sample sync_inventory_qa_sample
     *
     * @return $this
     */
    public function setSyncInventoryQaSample($sync_inventory_qa_sample)
    {
        $this->container['sync_inventory_qa_sample'] = $sync_inventory_qa_sample;

        return $this;
    }

    /**
     * Gets sync_inventory_sample
     *
     * @return string
     */
    public function getSyncInventorySample()
    {
        return $this->container['sync_inventory_sample'];
    }

    /**
     * Sets sync_inventory_sample
     *
     * @param string $sync_inventory_sample sync_inventory_sample
     *
     * @return $this
     */
    public function setSyncInventorySample($sync_inventory_sample)
    {
        $this->container['sync_inventory_sample'] = $sync_inventory_sample;

        return $this;
    }

    /**
     * Gets inventory_transfer_outbound_return_lookup
     *
     * @return string
     */
    public function getInventoryTransferOutboundReturnLookup()
    {
        return $this->container['inventory_transfer_outbound_return_lookup'];
    }

    /**
     * Sets inventory_transfer_outbound_return_lookup
     *
     * @param string $inventory_transfer_outbound_return_lookup inventory_transfer_outbound_return_lookup
     *
     * @return $this
     */
    public function setInventoryTransferOutboundReturnLookup($inventory_transfer_outbound_return_lookup)
    {
        $this->container['inventory_transfer_outbound_return_lookup'] = $inventory_transfer_outbound_return_lookup;

        return $this;
    }

    /**
     * Gets inventory_transfer_outbound_return
     *
     * @return string
     */
    public function getInventoryTransferOutboundReturn()
    {
        return $this->container['inventory_transfer_outbound_return'];
    }

    /**
     * Sets inventory_transfer_outbound_return
     *
     * @param string $inventory_transfer_outbound_return inventory_transfer_outbound_return
     *
     * @return $this
     */
    public function setInventoryTransferOutboundReturn($inventory_transfer_outbound_return)
    {
        $this->container['inventory_transfer_outbound_return'] = $inventory_transfer_outbound_return;

        return $this;
    }

    /**
     * Gets inventory_convert_undo
     *
     * @return string
     */
    public function getInventoryConvertUndo()
    {
        return $this->container['inventory_convert_undo'];
    }

    /**
     * Sets inventory_convert_undo
     *
     * @param string $inventory_convert_undo inventory_convert_undo
     *
     * @return $this
     */
    public function setInventoryConvertUndo($inventory_convert_undo)
    {
        $this->container['inventory_convert_undo'] = $inventory_convert_undo;

        return $this;
    }

    /**
     * Gets card_lookup
     *
     * @return string
     */
    public function getCardLookup()
    {
        return $this->container['card_lookup'];
    }

    /**
     * Sets card_lookup
     *
     * @param string $card_lookup card_lookup
     *
     * @return $this
     */
    public function setCardLookup($card_lookup)
    {
        $this->container['card_lookup'] = $card_lookup;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
